{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/dateHelper.js","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Footer/Footer.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Footer/Footer.module.css","images/logo.png"],"names":["module","exports","dateHelper","dt","date","Date","getDay","getDate","getMonth","getFullYear","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","md","lg","cx","card","infected","CardContent","Typography","variant","color","gutterBottom","start","end","value","duration","separator","CircularProgress","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","lineTension","backgroundColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Footer","href","fontSize","App","state","fetchedData","setState","this","image","src","logo","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ad6a43d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__8mzUh\",\"card\":\"Cards_card__2ePky\",\"infected\":\"Cards_infected__hr1JG\",\"recovered\":\"Cards_recovered__24KnB\",\"deaths\":\"Cards_deaths__6PhZO\"};","\r\nexport const dateHelper = (dt) =>{\r\n    \r\n    var date = new Date(dt);\r\n    var months = [\"جانفي\", \"فيفري\", \"مارس\", \"أفريل\", \"ماي\", \"جوان\",\r\n    \"جويلية\", \"أوت\", \"سبتمبر\", \"أكتوبر\", \"نوفمبر\", \"ديسمبر\"];\r\n    var days = [\"اﻷحد\", \"اﻷثنين\", \"الثلاثاء\", \"اﻷربعاء\", \"الخميس\", \"الجمعة\", \"السبت\"];\r\n    var delDateString = days[date.getDay()] + ', ' + date.getDate() + ' ' + months[date.getMonth()] + ', ' + date.getFullYear();\r\n    return delDateString\r\n}\r\n\r\n","import React from 'react';\r\nimport { CardContent, Typography, Grid, CircularProgress } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\n\r\nimport {dateHelper} from './dateHelper';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({data:{confirmed,recovered,deaths,lastUpdate}}) => {\r\n    if(!confirmed){\r\n        return(<CircularProgress />)\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={2} justify=\"center\">\r\n\r\n                {/* عدد المصابين */}\r\n                <Grid item\r\n                md={12} lg={3}\r\n                className={cx(styles.card,styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography variant=\"h4\" color=\"primary\" gutterBottom>المصابين</Typography>\r\n                        <Typography variant=\"h3\" gutterBottom>\r\n                            <CountUp start={0}\r\n                            end={confirmed.value}\r\n                            duration={2}\r\n                            separator=','/>\r\n                        </Typography>\r\n    <Typography variant=\"caption\" color=\"textSecondary\">{`تحديث : ${dateHelper(lastUpdate)}`}</Typography>\r\n                    </CardContent>\r\n                </Grid>  \r\n                \r\n                \r\n                {/* عدد المتعافين */}\r\n                \r\n                <Grid item\r\n                md={12} lg={3}\r\n                className={cx(styles.card,styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography variant=\"h4\" gutterBottom>المتعافين</Typography>\r\n                        <Typography variant=\"h3\" gutterBottom>\r\n                            <CountUp start={0}\r\n                            end={recovered.value}\r\n                            duration={2}\r\n                            separator=','/>\r\n                        </Typography>\r\n    <Typography variant=\"caption\" color=\"textSecondary\">{`تحديث : ${dateHelper(lastUpdate)}`}</Typography>\r\n                    </CardContent>\r\n                </Grid>   \r\n                \r\n                \r\n                {/* عدد المتوفين */}    \r\n                \r\n                <Grid item\r\n                md={12} lg={3}\r\n                className={cx(styles.card,styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography variant=\"h4\" color=\"secondary\" gutterBottom>المتوفين</Typography>\r\n                        <Typography variant=\"h3\" gutterBottom>\r\n                            <CountUp start={0}\r\n                            end={deaths.value}\r\n                            duration={2}\r\n                            separator=','/>\r\n                        </Typography>\r\n    <Typography variant=\"caption\" color=\"textSecondary\">{`تحديث : ${dateHelper(lastUpdate)}`}</Typography>\r\n                    </CardContent>\r\n                </Grid> \r\n\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\n\r\nexport const fetchData = async (country) =>{\r\n    let changeableUrl = url;\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n    try {\r\n        const { data:{confirmed,recovered,deaths,lastUpdate} } = await axios.get(changeableUrl);\r\n        const modifiedData = { confirmed, recovered, deaths, lastUpdate }\r\n        return modifiedData;   \r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () =>{\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        \r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n\r\n        return modifiedData;\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data:{countries} } = await axios.get(`${url}/countries`);\r\n        return countries.map((country) => country.name);\r\n        \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React,{useState, useEffect} from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\n\r\nconst Chart = ({data:{confirmed,recovered,deaths},country}) => {\r\n    const [dailyData,setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());     \r\n        }\r\n\r\n        fetchAPI();\r\n\r\n    },[]);\r\n\r\n    const lineChart =(\r\n        dailyData.length \r\n        ? (<Line\r\n        \r\n        data={{\r\n            labels: dailyData.map(({date}) => date),\r\n            datasets:[{\r\n                data:dailyData.map(({deaths}) => deaths),\r\n                label:'الوفيات',\r\n                borderColor:'#f44336',\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgba(75,192,192,0.4)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: '#f44336',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                \r\n            },{\r\n                data:dailyData.map(({confirmed}) => confirmed),\r\n                label:'الاصابات',\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgba(75,192,192,0.4)',\r\n                borderColor: 'rgba(75,192,192,1)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n            },],\r\n        }}\r\n        />)\r\n        : null\r\n    );    \r\n\r\n    const barChart = (\r\n        confirmed\r\n        ? (\r\n            <Bar \r\n            data = {{\r\n                labels:['المصابين','المتعافين','المتوفين'],\r\n                datasets:[{\r\n                    label:'People',\r\n                    backgroundColor:['rgba(0, 0, 255,0.5)','rgba(0, 255, 0,0.5)','rgba(255, 0, 0,0.5)'],\r\n                    data:[confirmed.value,recovered.value,deaths.value]\r\n                }]\r\n            }}\r\n\r\n            options = {{\r\n                legend: {display: false},\r\n                title: {display:true, text:`الاحصائية الحالية - ${country}`},                \r\n            }}\r\n            />\r\n        ) : null\r\n    )\r\n    \r\n    return(\r\n        <div className={styles.container}>\r\n            {\r\n                country ? barChart : lineChart\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React,{ useState, useEffect } from 'react';\r\nimport {NativeSelect,FormControl} from '@material-ui/core';\r\n\r\nimport {fetchCountries} from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n    const [fetchedCountries,setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async() =>{\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">عالميا</option>\r\n                {fetchedCountries.map((country,i) => \r\n                <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport {Typography} from '@material-ui/core';\r\n\r\nimport styles from './Footer.module.css';\r\n\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\n\r\n\r\nconst Footer = () => {\r\n\r\n    return(<div className={styles.container}>\r\n    <Typography variant=\"body2\" color=\"textSecondary\">\r\n        تصميم <a href=\"https://github.com/AbdelkaderOumrani/covid-tracker\">عبد القادر عمراني</a>\r\n        <FavoriteIcon fontSize=\"small\" color=\"primary\"/> \r\n        </Typography>\r\n\r\n    </div>)\r\n}\r\n\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\n\r\nimport {Cards,Chart,CountryPicker,Footer} from './components';\r\n\r\nimport styles from './App.module.css';\r\n\r\nimport { fetchData } from './api';\r\n\r\nimport logo from '../src/images/logo.png';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        data:{},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n        this.setState({data : fetchedData});\r\n\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({data: fetchedData,country});\r\n    }\r\n\r\n    render() {\r\n        const {data,country}  = this.state;\r\n\r\n        return (\r\n            <div className={styles.container}>\r\n\r\n                <img className={styles.image} src={logo} alt=\"Covid-19\"/>\r\n\r\n                <Cards data={data}/>\r\n\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n\r\n                <Chart data={data} country={country}/>\r\n\r\n                <Footer/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3jlcQ\",\"image\":\"App_image__1Hdh9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__25_1q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3WrCE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__2RZrC\"};","module.exports = __webpack_public_path__ + \"static/media/logo.2c097668.png\";"],"sourceRoot":""}