{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toLocaleDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.318eaca9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__8mzUh\",\"card\":\"Cards_card__2ePky\",\"infected\":\"Cards_infected__hr1JG\",\"recovered\":\"Cards_recovered__24KnB\",\"deaths\":\"Cards_deaths__6PhZO\"};","import React from 'react';\r\nimport { Card, CardContent, Typography,Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({data:{confirmed,recovered,deaths,lastUpdate}}) => {\r\n    if(!confirmed){\r\n        return(<h1>Loading</h1>)\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card}\r\n                xs={12} md={3}\r\n                className={cx(styles.card,styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0}\r\n                            end={confirmed.value}\r\n                            duration={2}\r\n                            separator=','/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toLocaleDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Active Cases</Typography>\r\n                    </CardContent>\r\n                </Grid>  \r\n\r\n\r\n                <Grid item component={Card}                \r\n                xs={12} md={3}\r\n                className={cx(styles.card,styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>                        \r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0}\r\n                            end={recovered.value}\r\n                            duration={2}\r\n                            separator=','/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toLocaleDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Recoveries</Typography>\r\n                    </CardContent>\r\n                </Grid>  \r\n\r\n\r\n                <Grid item component={Card}                \r\n                xs={12} md={3}\r\n                className={cx(styles.card,styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0}\r\n                            end={deaths.value}\r\n                            duration={2}\r\n                            separator=','/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toLocaleDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>                \r\n\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\n\r\nexport const fetchData = async (country) =>{\r\n    let changeableUrl = url;\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n    try {\r\n        const { data:{confirmed,recovered,deaths,lastUpdate} } = await axios.get(changeableUrl);\r\n        const modifiedData = { confirmed, recovered, deaths, lastUpdate }\r\n        return modifiedData;   \r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () =>{\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        \r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n\r\n        return modifiedData;\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data:{countries} } = await axios.get(`${url}/countries`);\r\n        return countries.map((country) => country.name);\r\n        \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React,{useState, useEffect} from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\n\r\nconst Chart = ({data:{confirmed,recovered,deaths},country}) => {\r\n    const [dailyData,setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());     \r\n        }\r\n\r\n        fetchAPI();\r\n\r\n    },[]);\r\n\r\n    const lineChart =(\r\n        dailyData.length \r\n        ? (<Line\r\n        data={{\r\n            labels: dailyData.map(({date}) => date),\r\n            datasets:[{\r\n                data:dailyData.map(({confirmed}) => confirmed),\r\n                label:'Infected',\r\n                borderColor:'#3333ff',\r\n                fill:true\r\n            },{\r\n                data:dailyData.map(({deaths}) => deaths),\r\n                label:'Deaths',\r\n                borderColor:'red',\r\n                backgroundColor:'rgab(255,0,0,0.5)', \r\n                fill:true\r\n            }],\r\n        }}\r\n        />)\r\n        : null\r\n    );    \r\n\r\n    const barChart = (\r\n        confirmed\r\n        ? (\r\n            <Bar \r\n            data = {{\r\n                labels:['Infected','Recovered','Deaths'],\r\n                datasets:[{\r\n                    label:'People',\r\n                    backgroundColor:['rgba(0, 0, 255,0.5)','rgba(0, 255, 0,0.5)','rgba(255, 0, 0,0.5)'],\r\n                    data:[confirmed.value,recovered.value,deaths.value]\r\n                }]\r\n            }}\r\n\r\n            options = {{\r\n                legend: {display: false},\r\n                title: {display:true, text:`Current state in ${country}`},                \r\n            }}\r\n            />\r\n        ) : null\r\n    )\r\n    \r\n    return(\r\n        <div className={styles.container}>\r\n            {\r\n                country ? barChart : lineChart\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React,{ useState, useEffect } from 'react';\r\nimport {NativeSelect,FormControl} from '@material-ui/core';\r\n\r\nimport {fetchCountries} from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n    const [fetchedCountries,setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async() =>{\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country,i) => \r\n                <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React, { Component } from 'react'\r\n\r\nimport {Cards,Chart,CountryPicker} from './components'\r\n\r\nimport styles from './App.module.css'\r\n\r\nimport { fetchData } from './api'\r\n\r\nclass App extends Component {\r\n    state = {\r\n        data:{},\r\n        country: ''\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n        this.setState({data : fetchedData});\r\n\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({data: fetchedData,country});\r\n    }\r\n\r\n    render() {\r\n        const {data,country}  = this.state;\r\n\r\n        return (\r\n            <div className={styles.container}>\r\n\r\n                <img className={styles.image} src=\"https://i.ibb.co/7QpKsCX/image.png\" alt=\"Covid-19\"/>\r\n\r\n                <Cards data={data}/>\r\n\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n\r\n                <Chart data={data} country={country}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3jlcQ\",\"image\":\"App_image__1Hdh9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__25_1q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3WrCE\"};"],"sourceRoot":""}